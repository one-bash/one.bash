#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

# one.bash:completion
if [[ "${1:-}" == --complete ]]; then
  if (( COMP_CWORD < 3 )); then
    result=$(compgen -f -- "$2")
    if [[ -d $result ]]; then
      compgen -f -- "$result/"
    else
      echo "${result[@]}"
    fi
  fi
  exit 0
fi

# one.bash:usage
if [[ ${1:-} == -h ]] || [[ ${1:-} == --help ]]; then
  cat <<EOF
Usage: one $(basename "$0") [<PATH>]
Desc: Create a restore file for enabled modules
Args:
  <PATH>  The filepath of output [Default: restore-modules]
EOF
  exit 0
fi

if [[ -z ${ONE_DIR:-} ]]; then
  SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
  ONE_DIR=$SCRIPT_DIR/..
fi

# shellcheck source=../../bash/load-config.bash
. "$ONE_DIR/bash/load-config.bash"

# shellcheck source=../../bash/mod.bash
. "$ONE_DIR/bash/mod.bash"

# shellcheck source=../../deps/colors.bash
. "$ONE_DIR/deps/colors.bash"

dist="${1:-restore-modules}"

cat <<EOF >"$dist"
#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

one plugin disable -a
one alias disable -a
one completion disable -a

EOF

printf '%b%s\nContent:%b\n' "${GREEN}" "Created file: $dist" "${RESET_ALL}"

{
  echo "one plugin enable $(list_enabled plugin)"
  echo ''
  echo "one alias enable $(list_enabled alias)"
  echo ''
  echo "one completion enable $(list_enabled completion)"
} | tee -a "$dist"

printf '\necho "[All Done]"\n' >> "$dist"

chmod +x "$dist"

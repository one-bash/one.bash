#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

# one.bash:usage
if (($# == 0)) || [[ $1 == -h ]] || [[ $1 == --help ]]; then
	# editorconfig-checker-disable
	cat <<EOF
Usage: one search [-a] <WORD>

Desc: Search alias/bin/completion/plugin of each enabled repo.

Arguments:
  <WORD>         Any words without spaces.

Options:
  -a             Search with all added repos.
EOF
	# editorconfig-checker-enable
	exit 0
fi

if [[ -z ${ONE_DIR:-} ]]; then
	SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
	readonly SCRIPT_DIR
	export ONE_DIR=$SCRIPT_DIR/..
fi

# shellcheck source=./base-scripts.bash
. "$ONE_DIR/one-cmds/base-scripts.bash"

# shellcheck source=./mod-base.bash
. "$ONE_DIR/one-cmds/mod-base.bash"

# shellcheck source=./mod.bash
. "$ONE_DIR/one-cmds/mod.bash"

# shellcheck source=./util.bash
. "$ONE_DIR/one-cmds/util.bash"

declare -A opts=()
declare -a args=()
declare -A opts_def=(
	[opts]=opts
	[args]=args
	['-a --all']=bool
)
l.parse_args opts_def "$@"

search() {
	local word=${args[0]} scope repo_name mod_type mod_name

	if [[ ${opts[a]} == true ]]; then
		scope=data
	else
		scope=enabled
	fi

	declare -A MOD_TYPE_COLOR=(
		[completion]=$GREEN
		[plugin]=$BLUE
		[alias]=$PURPLE
		[bin]=$WHITE
		[sub]=$YELLOW
	)

	printf 'Prio Type %-18s %-18s %s\n' "Name" "Repo" "About"

	shopt -s nullglob

	local filepath t

	for filepath in "${ONE_DIR}/$scope"/repo/*/{alias,bin,completion,plugin,sub}/*"${word}"*; do
		local -a prints=()
		local format='' about=''

		if [[ $filepath =~ \/${scope}\/repo\/([^\/]+)\/([^\/]+)\/([^\/]+) ]]; then
			repo_name="${BASH_REMATCH[1]}"
			t="${BASH_REMATCH[2]}"
			mod_name="${BASH_REMATCH[3]}"
			mod_name=${mod_name##*/}

			if [[ $mod_name == *.opt.bash ]]; then
				mod_name=${mod_name%.opt.bash}
				# shellcheck disable=1090,2153
				about="$(. "$filepath" && echo "$ABOUT")"
				priority=$(get_priority_from_mod "$filepath")
			else
				mod_name=${mod_name%.bash}
				about=$(metafor about-plugin <"$filepath")
				priority=$(get_priority "$filepath")
			fi

			# load-priority
			format="$format%b%-4s"
			prints+=("$YELLOW" "$priority")

			# mod type
			format="$format %b%-4s"
			mod_type=${t^}
			prints+=("${MOD_TYPE_COLOR[${t}]}" "${mod_type:0:4}")

			# mod_name repo_name
			format="$format %b%-18s %b%-18s"

			prints+=(
				"$CYAN" "${mod_name:0:18}"
				"$BLUE" "${repo_name:0:18}"
			)

			# About
			format="$format %b%s"
			prints+=("$WHITE" "$about")

			# shellcheck disable=2059
			printf "$format\n" "${prints[@]}"
		fi
	done
}
search "$@"

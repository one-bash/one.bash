#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

# one.bash:usage
if (($# == 0)) || [[ $1 == -h ]] || [[ $1 == --help ]]; then
	# editorconfig-checker-disable
	cat <<EOF
Usage: one search [-a] <WORD>

Desc: Search alias/bin/completion/plugin of each enabled repo.

Arguments:
  <WORD>         Any words without spaces.

Options:
  -a             Search with all added repos.
EOF
	# editorconfig-checker-enable
	exit 0
fi

if [[ -z ${ONE_DIR:-} ]]; then
	ONE_DIR=$(realpath "$0")
	ONE_DIR=${ONE_DIR%/*}
	ONE_DIR=${ONE_DIR%/*}
	declare -rx ONE_DIR
fi

# shellcheck source=./base-scripts.bash
. "$ONE_DIR/one-cmds/base-scripts.bash"

# shellcheck source=./mod-base.bash
. "$ONE_DIR/one-cmds/mod-base.bash"

# shellcheck source=./mod.bash
. "$ONE_DIR/one-cmds/mod.bash"

# shellcheck source=./util.bash
. "$ONE_DIR/one-cmds/util.bash"

declare -A opts=()
declare -a args=()
declare -A opts_def=(
	[opts]=opts
	[args]=args
	['-a --all']=bool
)
l.parse_args opts_def "$@"

main() {
	local word=${args[0]} scope

	if [[ ${opts[a]} == true ]]; then
		scope=data
	else
		scope=enabled
	fi

	printf 'Prio Type %-6s %-18s %-18s %s\n' "Enabled" "Name" "Repo" "About"

	shopt -s nullglob

	local filepath
	for filepath in "${ONE_DIR}/$scope"/repo/*/{alias,bin,completion,plugin,sub}/*"${word}"*; do
		print_mod_props "$filepath"
	done
}
main "$@"

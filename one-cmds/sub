#!/usr/bin/env bash

set -o errexit -o nounset -o pipefail -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

scan_dir() {
  local dir=$1

  for path in "$dir"/*; do
    if [[ -x $path ]]; then
      if [[ $full == -f ]]; then
        echo "$path"
      else
        echo "${path##"$dir/"}"
      fi
    fi
  done
}

list_subs() {
  local full=${1:-}
  local repo

  shopt -s nullglob

  # shellcheck disable=2153
  for repo in "$ONE_DIR"/enabled/repos/*; do
    if [[ ! -d $repo/sub ]]; then continue; fi
    scan_dir "$repo/sub"
  done | uniq
}

# one.bash:completion
if [[ "${1:-}" == --complete ]]; then
  actions=(list which)

  if (( COMP_CWORD < 3 )); then
    words=("${actions[@]}" -h --help)
    printf '%s\n' "${words[@]}"
  elif [[ $2 == -h ]] || [[ $2 == --help ]]; then
    printf '%s\n' "${actions[@]}"
  elif [[ $2 =~ ^(l|list)$ ]] && (( COMP_CWORD < 4 )); then
    echo '-f'
  elif [[ $2 =~ ^(w|which)$ ]] && (( COMP_CWORD < 4 )); then
    # shellcheck source=../../bash/load-config.bash
    . "$ONE_DIR/bash/load-config.bash"
    list_subs
  fi
  exit 0
fi

usage() {
  local cmd; cmd=$(basename "$0");
  cat <<EOF
Usage:  one $cmd <ACTION>
        one $cmd [-h|--help]
        one $cmd <-h|--help> <ACTION>

Desc:  Manage ONE_SUB commands

ACTION:
  l, list          List executable files in each REPO/sub
  w, which <cmd>   Show filepath of cmd
EOF
  exit 0
}

usage_list() {
  local cmd; cmd=$(basename "$0");
  cat <<EOF
Usage: one $cmd list [-f]
Desc:  List executable files in each REPO/sub
Options:
  -f							 Show filepath of each executable file
EOF
  exit 0
}
usage_l() { usage_list; }

usage_which() {
  local cmd; cmd=$(basename "$0");
  cat <<EOF
Usage: one $cmd which <cmd>
Desc:  Show filepath of <cmd>
EOF
  exit 0
}
usage_w() { usage_which; }

# one.bash:usage
if (( $# == 0 )); then
  usage;
elif [[ $1 == -h ]] || [[ $1 == --help ]]; then
  if (( $# > 1 )); then usage_"$2"; else usage; fi
elif [[ ${*: -1} == --help ]] ; then
  if (( $# > 1 )); then usage_"$1"; else usage; fi
fi

which_sub() {
  local name=$1
  local path repo

  for repo in "$ONE_DIR"/enabled/repos/*; do
    if [[ -x $repo/sub/$name ]]; then
      echo "$repo/sub/$name"
      return 0
    fi
  done
}

action=$1
shift

# shellcheck source=../../bash/load-config.bash
. "$ONE_DIR/bash/load-config.bash"

case "$action" in
  l|list) list_subs "$@" ;;

  w|which) which_sub "$@" ;;

  *)
    echo "Invalid action '$action'" >&2
    exit 1
    ;;
esac

#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

if [[ -z ${ONE_DIR:-} ]]; then
  SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
  ONE_DIR=$SCRIPT_DIR/..
fi

# shellcheck source=../../bash/load-config.bash
. "$ONE_DIR/bash/load-config.bash"

# shellcheck source=../../bash/mod.bash
. "$ONE_DIR/bash/mod.bash"

t=$(basename "$0")
ts=${t_map[$t]}
readonly t ts


usage() {
  cat <<EOF
Usage: one $t <ACTION>
Desc:  Manage $ts in ONE_REPO/$ts/
Action:
  e, enable           Enable matched $ts
  d, disable          Disable matched $ts
  l, list             List enabled $ts
  w, which <NAME>     Show realpath of $ts

------
Usage: one $t enable <name> [<name>...]
Arguments:
  <name>  $t name

------
Usage: one $t disable <name> [<name>...]
       one $t disable -a
Options:
  -a                  If set, disable all $ts

------
Usage: one $t list [<OPTIONS>]
Desc: List enabled $ts
Options:
  -a                  If set, list all available $ts in each repo
  -n                  If set, list module names instead of filepaths

------
Usage: one $t which <NAME>
Desc:  Show realpath of $ts
Arguments:
  <NAME>    the module name
EOF
  exit 0
}

# one.bash:usage
if (( $# == 0 )) || [[ $1 == -h ]] || [[ $1 == --help ]]; then usage; fi

# one.bash:completion
if [[ "${1:-}" == "--complete" ]]; then
  if (( COMP_CWORD < 3 )); then
    words=(enable disable which list --help)
    printf '%s\n' "${words[@]}"
  elif [[ $2 == list ]] && (( COMP_CWORD < 5 )); then
    printf -- '-a\n-n\n'
  elif [[ $2 == which ]] && (( COMP_CWORD < 5 )); then
    list_mod
  elif [[ $2 == enable ]]; then
    compgen_enable_mod
  elif [[ $2 == disable ]]; then
    compgen_disable_mod
  fi

  exit 0
fi

print_list_item() {
  local line name

  while read -r line; do
    name=$(basename "$line" | sed -E "s/^[[:digit:]]{3}---(.+).$t.bash\$/\1/")
    printf '%b%s%b -> %b%s\n' "$CYAN" "$name" "$GREY" "$RESET_ALL" "$(readlink "$line")"
  done
}

list_mods() {
  # shellcheck source=../../deps/colors.bash
  . "$ONE_DIR/deps/colors.bash"


  if [[ -n "${opts[a]:-}" ]]; then
    # list all available mods
    if [[ -n "${opts[n]:-}" ]]; then
      # list only mod names
      list_mod | tr '\n' ' '
      printf '\n'
    else
      local ONE_REPO
      # shellcheck disable=2153
      for ONE_REPO in "${ONE_REPOS[@]}"; do
        # shellcheck disable=2154
        if [[ ! -d "$ONE_REPO/$ts" ]]; then continue; fi

        printf '%b%s%b\n' "$BLUE" "[REPO: $ONE_REPO]" "$RESET_ALL"
        find -L "$ONE_REPO/$ts" -maxdepth 1 -type f -exec basename {} .bash \; | tr '\n' ' '
        printf '\n'
      done
    fi
  else
    # list all enabled mods
    if [[ -n "${opts[n]:-}" ]]; then
      # list only mod names
      list_enabled "$t" | tr '\n' ' '
      printf '\n'
    else
      find "$ENABLED_DIR" -maxdepth 1 -type l -name "*---*.$t.bash" | print_list_item
    fi
  fi
}

action=$1
shift

# shellcheck source=../../deps/lobash.bash
. "$ONE_DIR/deps/lobash.bash"

declare -A opts=()
declare -a args=()
l.parse_params opts args "$@"

case "$action" in
  l|list) list_mods ;;

  e|enable) if (( $# == 0 )); then usage; else enable_it "$@"; fi ;;

  d|disable) if (( $# == 0 )); then usage; else disable_it "$@"; fi ;;

  w|which) if (( $# == 0 )); then usage; else search_mod "$1"; fi ;;

  *)
    echo "Invalid action '$action'" >&2
    exit 1
    ;;
esac

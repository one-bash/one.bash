#!/usr/bin/env bash

set -o errexit -o nounset -o pipefail -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

# one.bash:completion
if [ "${1:-}" = "--complete" ]; then
	if [[ $COMP_CWORD -lt 3 ]]; then
		words=(
			-h --help -l --list --edit
			SUB RC DEBUG NO_MODS BASHRC_FO REPOS PATHS SKIP_COMPS LINKS_CONF
		)
		for w in "${words[@]}"; do echo "$w"; done
	fi
	exit 0
fi

# one.bash:usage
if (($# == 0)) || [[ $1 == -h ]] || [[ $1 == --help ]]; then
	# editorconfig-checker-disable
	cat <<EOF
Usage:
  one config [OPTIONS]
  one config <key>           Print value
  one config <key>=<value>   Set value
  one config <key> <value>   Set value

Desc: Manage user's ONE_CONF (Current: $ONE_CONF)

Arguments:
  <key>                      The name of property defined in ONE_CONF
  <value>                    The value of property

Options:
  -h|--help                  Show help
  -l|--list                  List configs
  --edit                     Edit config file

Example:
  one config sub b           To set ONE_SUB=b
  one config sub             To query the value of ONE_SUB
EOF
	# editorconfig-checker-enable
	exit 0
fi

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
readonly SCRIPT_DIR

get_val() {
	declare -p "$1" | sed -E 's/^declare -[-a-zA-Z]+ //'
}

get_func() {
	declare -f "$1"
}

list_options() {
	local name
	for name in $(compgen -A variable ONE_); do
		get_val "$name"
	done

	for name in $(compgen -A function ONE_); do
		get_func "$name"
	done
}

parse_pairs() {
	declare -a list

	if [[ $# == 1 ]]; then
		l.split "$1" list '='
	else
		list=("$1" "$2")
	fi

	local key=ONE_${list[0]^^}

	if [[ ${#list[@]} == 1 ]]; then
		# to get value
		if [[ $key == ONE_LINKS_CONF ]]; then
			get_func "$key"
		else
			get_val "$key"
		fi
	else
		# to set value
		local path
		if [[ -L $ONE_CONF ]]; then
			path=$(readlink "$ONE_CONF")
		else
			path=$ONE_CONF
		fi

		if grep -E "^${key}=" "$path" >/dev/null; then
			l.sedi -E "s/^${key}=.+/${key}='${list[1]}'/" "$path"
		else
			printf '\n%s\n' "${key}='${list[1]}'" >>"$path"
		fi

		echo "You should restart shell to takes effect"
	fi
}

# shellcheck source=../deps/lobash.bash
. "$SCRIPT_DIR/../deps/lobash.bash"

declare -A opts=()
declare -a args=()
declare -A opts_def=(
	[opts]=opts
	[args]=args
	['-h --help']=bool
	['-l --list']=bool
	[--edit]=bool
)
l.parse_args opts_def "$@"

main() {

	# shellcheck source=../bash/load-config.bash
	. "$ONE_DIR/bash/load-config.bash"

	if [[ ${opts[l]} == true ]]; then
		list_options
		return 0
	fi

	if [[ ${opts[edit]} == true ]]; then
		$EDITOR "$ONE_CONF"
		return 0
	fi

	parse_pairs "${args[@]}"
}
main

#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

# one.bash:completion
if [[ "${1:-}" == --complete ]]; then
  words=(-h --help --type --priority)
  printf '%s\n' "${words[@]}"
  exit 0
fi

usage() {
  local cmd; cmd=$(basename "$0");
  cat <<EOF
Usage: one $cmd [OPTIONS]
Desc:  List enabled modules
Options:
  -h, --help                          Show usage
  --type=true|false
  --priority=true|false
EOF
}

# one.bash:usage
if [[ ${1:-} == -h ]] || [[ ${1:-} == --help ]]; then
  usage
  exit 0
fi

if [[ -z ${ONE_DIR:-} ]]; then
  SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
  ONE_DIR=$SCRIPT_DIR/..
fi

# shellcheck source=../../bash/load-config.bash
. "$ONE_DIR/bash/load-config.bash"

# shellcheck source=../../deps/colors.bash
. "$ONE_DIR/deps/colors.bash"

# shellcheck source=../../bash/log.bash
. "$ONE_DIR/bash/log.bash"

# shellcheck source=../../bash/mod.bash
. "$ONE_DIR/bash/mod.bash"

# shellcheck source=../../deps/lobash.bash
. "$ONE_DIR/deps/lobash.bash"

declare -A opts=()
declare -a args=()
l.parse_params opts args "$@"

list() {
  find "$ONE_DIR/enabled" -maxdepth 1 -name "*---*.bash" | print_list_item | sort
}
list

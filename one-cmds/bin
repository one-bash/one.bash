#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

if [[ -z ${ONE_DIR:-} ]]; then
  SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
  ONE_DIR=$SCRIPT_DIR/..
fi

# shellcheck source=../../bash/load-config.bash
. "$ONE_DIR/bash/load-config.bash"

# shellcheck source=../../bash/log.bash
. "$ONE_DIR/bash/log.bash"

# shellcheck source=../../bash/mod.bash
. "$ONE_DIR/bash/mod.bash"

t=$(basename "$0")
ts=${t_map[$t]}
readonly t ts

# one.bash:completion
if [[ "${1:-}" == "--complete" ]]; then
  actions=(enable disable which list info)

  if (( COMP_CWORD < 3 )); then
    words=("${actions[@]}" -h --help)
    printf '%s\n' "${words[@]}"
  elif [[ $2 == -h ]] || [[ $2 == --help ]]; then
    printf '%s\n' "${actions[@]}"
  elif [[ $2 =~ ^(l|list)$ ]] && (( COMP_CWORD < 4 )); then
    echo '-f'
  elif [[ $2 =~ ^(w|which|i|info)$ ]] && (( COMP_CWORD < 4 )); then
    list_mod
  elif [[ $2 =~ ^(e|enable)$ ]]; then
    compgen_enable_mod
  elif [[ $2 =~ ^(d|disable)$ ]]; then
    compgen_disable_mod
  fi
  exit 0
fi

usage() {
  local cmd; cmd=$(basename "$0");
  cat <<EOF
Usage:  one $cmd <ACTION>
        one $cmd [-h|--help]
        one $cmd <-h|--help> <ACTION>

Desc:   Manage commands in ONE_REPO/bin/

ACTION:
  e, enable           Enable matched $ts
  d, disable          Disable matched $ts
  l, list             List enabled executable in each REPO/bin
  i, info             Show info of matched $ts
  w, which <NAME>     Show realpath of $t
EOF
exit 0
}

usage_enable() {
  cat <<EOF
Usage: one $t enable <NAME> [<NAME>...]
Desc:  Enable matched $ts
Arguments:
  <name>  $t name
EOF
  exit 0
}
usage_e() { usage_enable; }

usage_disable() {
  cat <<EOF
Usage:  one $t disable <NAME> [<NAME>...]
        one $t disable --all
Desc:   Disable matched $ts
Options:
  --all               If set, disable all $ts
EOF
  exit 0
}
usage_d() { usage_diable; }

usage_list() {
  local cmd; cmd=$(basename "$0");
  cat <<EOF
Usage: one $cmd list [-f]
Desc:  List executable filenames in each REPO/bin
Options:
  -f              Show filepath of each executable file
EOF
exit 0
}
usage_l() { usage_list; }

usage_info() {
  cat <<EOF
Usage: one $t info <NAME>
Desc:  Show info of matched $ts
Arguments:
  <NAME>    the module name
EOF
  exit 0
}
usage_i() { usage_info; }

usage_which() {
  cat <<EOF
Usage: one $t which <NAME>
Desc:  Show realpath of $t
Arguments:
  <NAME>    the module name
EOF
  exit 0
}
usage_w() { usage_which; }

# one.bash:usage
if (( $# == 0 )) then
  usage;
elif [[ $1 == -h ]] || [[ $1 == --help ]]; then
  if (( $# > 1 )); then usage_"$2"; else usage; fi
elif [[ ${*: -1} == --help ]] ; then
  if (( $# > 1 )); then usage_"$1"; else usage; fi
fi

if [[ -z ${ONE_DIR:-} ]]; then
  SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
  readonly SCRIPT_DIR
  export ONE_DIR=$SCRIPT_DIR/..
fi

list_bins() {
  {
    shopt -s nullglob

    # shellcheck disable=2153
    for ONE_REPO in "${ONE_REPOS[@]}"; do
      if [[ ! -d $ONE_REPO/bin ]]; then continue; fi

      for path in "$ONE_REPO"/bin/*; do
        if [[ -x $path ]]; then
          if [[ ${1:-} == -f ]]; then
            echo "$path"
          else
            echo "${path##"$ONE_REPO/bin/"}"
          fi
        fi
      done
    done
  } | uniq
}

enable_mod() {
  local name=$1 filepath
}

action=$1
shift

# shellcheck source=../../deps/lobash.bash
. "$ONE_DIR/deps/lobash.bash"

declare -A opts=()
declare -a args=()
l.parse_params opts args "$@"

case "$action" in
  l|list) list_bins "$@" ;;

  e|enable) if (( $# == 0 )); then usage; else enable_it "$@"; fi ;;

  d|disable) if (( $# == 0 )); then usage; else disable_it "$@"; fi ;;

  i|info) if (( $# == 0 )); then usage; else info_mod "$1"; fi ;;

  w|which) if (( $# == 0 )); then usage; else search_mod "$1"; fi ;;

  *)
    echo "Invalid action '$action'" >&2
    exit 1
    ;;
esac
